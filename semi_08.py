#!/usr/bin/env python
# coding: utf-8

# In[3]:


# 1 
# Используя список l1, создать список, в котором каждый элемент списка l1 будет заменен значением 
# длины строки соответствующего элемента в списке l1. Использовать генераторы, решить задачу в одну строку

l1 = ['1', '123', '123', '12', '1', '123']

new_list = [len(item) for item in l1] 

print(new_list)


# In[4]:


# 2
# Подсчитать количество строк в списке l1, длина которых больше 2х. Использовать генераторы, решить задачу в одну строку

l1 = ['1', '123', '123', '12', '1', '123']

count = sum(1 for item in l1 if len(item) > 2) # функция sum складывает все элементы, у которых длина более 2 

print(count)


# In[6]:


# 3
# Создать список, в котором все числа списка l2 умножены на их номер в списке. 
# Использовать генераторы, решить задачу в одну строку.

l2 = [2, 4, -2, -3, 0 , 11 , 3, -1]

new_list = [num * index for index, num in enumerate(l2)] # функция enumerate возвращает 2 значения (индекс элемента, элемент)

print(new_list)


# In[7]:


# 4
# Создать список, в котором все отрицательные числа списка l2 исключены, остальные элементы сохранены на своих местах. 
# Использовать генераторы, решить задачу в одну строку.

l2 = [2, 4, -2, -3, 0 , 11 , 3, -1]

new_list = [num for num in l2 if num >= 0]

print(new_list)


# In[8]:


# 5
# Создать список, в котором все отрицательные числа списка l2 заменены на их номер в списке, 
# остальные элементы сохранены на своих местах. Использовать генераторы и тернарный оператор, решить задачу в одну строку.

l2 = [2, 4, -2, -3, 0 , 11 , 3, -1]

new_list = [num if num >= 0 else index for index, num in enumerate(l2)] # чтобы получить сразу и число, и индекс опять пробегаем
# по циклу с использованием функции enumerate

print(new_list) 


# In[9]:


# 6
# На основе переданной строки (не содержащей повторяющихся символов) создать словарь, 
# в котором каждому символу строки будет соответствовать номер символа в строке. 
# Использовать генераторы, решить задачу в одну строку. Пример: строка 'abcdef', словарь {'a': 1, 'b': 2, 'c': 3, 'd': 4}

string = 'abcdef' 

dictionary = {char: index + 1 for index, char in enumerate(string)} #на каждом проходе в списке char будет буква, в index индекс 
# этой буквы в строке

print(dictionary)


# In[10]:


# 7
# Определить, сколько элементов заданного списка содержится в словаре. Использовать генераторы, 
# решить задачу в одну строку. Пример: определить сколько элементов списка l1 содержится в словаре d1. (ответ: 2)

l1 = ['1', '123', '123', '12', '1', '123']
d1 = 

count = sum(1 for element in l1 if element in d1)

print(count)


# In[1]:


# 11
d4 = {1: 10, 2: 20, 3: 30, 4: 40, 5: 50, 6: 60}

result = sum(key * value for key, value in d4.items())

print(result)


# In[2]:


# 12
d5 = {'a': 3, 'b': 4, 'c': 5, 'd': 6, 'e': 7, 'f': 8, 'g': 9}
d6 = {'e': 20, 'f': 21, 'g': 22, 'h': 23, 'i': 24, 'j': 25, 'k': 26, 'l': 27}
d8 = {key: d5[key] if key in d5 else d6[key] for key in d6} 
print(d8)


# In[3]:


# 13 примерное решение, поскольку не понятно о каком словаре речь
d = {'a': 2, 'b': 3, 'c': 1, 'd': 6, 'e': 4, 'f': 2, 'g': 7, 'h': 3, 'i': 1, 'j': 5}

d = {key: value for key, value in d.items() if value >= 5}


# In[4]:


# 8 
# Для строки evgene_o создать словарь, где для всех символов, встречающихся в строке, хранится число: 
# сколько раз символ встретился в строке evgene_o. Использовать генераторы, решить задачу в одну строку

s = "evgene_o"

char_count = {char: s.count(char) for char in s}  # s.сount(char) - подсчитывает сколько раз в строке s встречается символ

print(char_count)


# In[5]:


# 9 
# Используя словарь, полученный в предыдущей задаче, подсчитать количество строчных букв в строке evgene_o. 
# Использовать генераторы, решить задачу в одну строку

dictionary = {'e': 3, 'v': 1, 'g': 1, 'n': 1, '_': 1, 'o': 1}

lowercase_count = sum(dictionary[char] for char in dictionary if char.islower())  # s.islower() проверит в нижнем ли 
# регистре строка/символ и вернет тру или фалз

print(lowercase_count)

